name: Bookstore CI/CD with Image Publishing

on:
  push:
    branches: [ master ]
    tags: ['v*']
  pull_request: 
    branches: [ master ]
  workflow_dispatch:

env:
  IMAGE_BACKEND: nileshk12/bookstore-backend
  IMAGE_FRONTEND: nileshk12/bookstore-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_BACKEND }}:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_FRONTEND }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH access to EC2
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
      - name: Deploy to ec2 via ssh
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_HOST }} << 'EOF'
            cd ~
            if [ ! -d bookstore ]; then
              git clone https://github.com/nileshk12/bookstore.git
            fi

            cd bookstore
            git pull origin master

            sed -i 's|build:.*backend|image: nileshk12/bookstore-backend:latest|' docker-compose.yml
            sed -i 's|build:.*backend|image: nileshk12/bookstore-frontend:latest|' docker-compose.yml
            docker compose down || true
            docker compose pull
            docker compose up -d --force-recreate
          EOF

          
              
